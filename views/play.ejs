<!DOCTYPE html>
<html lang="zh">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>视频播放</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/axios/1.8.4/axios.min.js"></script>
    <style>
        /* 基础样式 */
        .video-container {
            position: relative;
            width: 100%;
            background: #000;
            overflow: hidden;
        }
        
        .video-frame {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border: none;
            object-fit: contain;
        }

        /* 视频比例样式 */
        .video-container.landscape { aspect-ratio: 16 / 9; }
        .video-container.portrait { 
            aspect-ratio: 9 / 16;
            max-width: 500px;
            margin: 0 auto;
        }

        /* 平台标签样式 */
        .platform-tag {
            display: inline-block;
            padding: 2px 8px;
            border-radius: 4px;
            font-size: 12px;
            color: #fff;
            background-color: rgba(0,0,0,0.6);
        }

        .platform-bilibili { border-left: 3px solid #FB7299; }
        .platform-douyin { border-left: 3px solid #000000; }
        .platform-youtube { border-left: 3px solid #FF0000; }

        /* 响应式布局 */
        @media (min-width: 769px) {
            .video-layout {
                display: flex;
                gap: 20px;
                max-width: 1400px;
                margin: 0 auto;
                padding: 20px;
            }
            
            .video-container {
                flex: 1;
                border-radius: 8px;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }
            
            .video-container.portrait { max-width: 400px; }
            
            .video-sidebar {
                width: 360px;
                background: #fff;
                border-radius: 8px;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
                padding: 20px;
            }
            
            .video-title {
                font-size: 1.5rem;
                font-weight: bold;
                color: #333;
                margin-bottom: 12px;
            }
            
            .video-meta {
                display: flex;
                align-items: center;
                gap: 12px;
                margin-bottom: 16px;
            }
            
            .video-desc {
                color: #666;
                line-height: 1.6;
                font-size: 0.95rem;
            }
        }

        @media (max-width: 768px) {
            .video-layout {
                min-height: 100vh;
                position: relative;
                background: #f5f5f5;
                display: flex;
                flex-direction: column;
                gap: 12px;
                padding: 12px;
            }
            
            .video-container {
                width: 100%;
                border-radius: 12px;
                overflow: hidden;
                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            }
            
            .video-sidebar {
                position: relative;
                width: 100%;
                margin: 0;
                background: #fff;
                color: #333;
                padding: 16px;
                border-radius: 12px;
                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            }
            
            .video-title {
                font-size: 1.2rem;
                line-height: 1.4;
                margin-bottom: 12px;
                color: #333;
                font-weight: 600;
            }
            
            .video-desc {
                font-size: 0.9rem;
                line-height: 1.6;
                color: #666;
                margin-bottom: 16px;
            }
        }
    </style>
</head>
<body class="bg-gray-100">
    <!-- 导航栏 -->
    <nav class="bg-white shadow-lg p-4">
        <div class="container mx-auto">
            <div class="flex items-center">
                <a href="/" class="text-2xl font-bold text-blue-600" id="mainTitle">视频站</a>
            </div>
        </div>
    </nav>

    <!-- 主要内容 -->
    <div class="container mx-auto py-4">
        <div class="video-layout flex">
            <!-- 左侧视频播放器 -->
            <div class="flex-1">
                <div class="video-container rounded-lg overflow-hidden shadow-lg">
                    <iframe id="videoFrame" class="video-frame" allowfullscreen allow="fullscreen"></iframe>
                </div>
            </div>

            <!-- 右侧视频信息 -->
            <div class="video-sidebar w-80 ml-4">
                <div class="space-y-4">
                    <div>
                        <h1 id="videoTitle" class="video-title"></h1>
                        <div class="video-meta">
                            <span id="platformTag" class="platform-tag"></span>
                            <span id="createTime" class="create-time"></span>
                            <% if (config && config.enableShare) { %>
                            <button onclick="shareVideo()" class="share-btn ml-auto">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <path d="M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"/>
                                    <polyline points="16 6 12 2 8 6"/>
                                    <line x1="12" y1="2" x2="12" y2="15"/>
                                </svg>
                                分享
                            </button>
                            <% } %>
                        </div>
                    </div>
                    <div>
                        <h2 class="text-lg font-semibold mb-2 text-white">视频简介</h2>
                        <p id="videoDesc" class="video-desc"></p>
                    </div>
                </div>
            </div>
            
            <!-- 返回按钮 -->
            <div class="nav-back" onclick="window.history.back()">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M19 12H5M12 19l-7-7 7-7"/>
                </svg>
            </div>
        </div>
    </div>

    <script>
        // 初始化
        document.addEventListener('DOMContentLoaded', () => {
            loadSettings();
            loadVideoInfo();
        });

        // 加载设置
        function loadSettings() {
            const siteTitle = localStorage.getItem('siteTitle') || '视频站';
            document.getElementById('mainTitle').textContent = siteTitle;
        }

        // 获取URL参数
        function getQueryParam(param) {
            const urlParams = new URLSearchParams(window.location.search);
            return urlParams.get(param);
        }

        // 检测视频比例
        async function checkVideoRatio(videoUrl) {
            return new Promise((resolve) => {
                const video = document.createElement('video');
                video.src = videoUrl;
                
                video.onloadedmetadata = () => {
                    const ratio = video.videoWidth / video.videoHeight;
                    resolve(ratio < 1 ? 'portrait' : 'landscape');
                };
                
                video.onerror = () => {
                    const platform = window.currentVideo?.videoplatform;
                    resolve(platform === '抖音' ? 'portrait' : 'landscape');
                };
            });
        }

        // 加载视频信息
        async function loadVideoInfo() {
            try {
                // 检查URL中是否有token参数
                const token = getQueryParam('token');
                let videoJson;

                if (token) {
                    // 如果有token,从服务器解密
                    const response = await axios.post('/api/decrypt', { token });
                    if (response.data.resCode === '000001') {
                        videoJson = response.data.videoData;
                    } else {
                        throw new Error(response.data.message);
                    }
                } else {
                    // 否则从localStorage获取
                    videoJson = localStorage.getItem('playVideo');
                }

                if (!videoJson) {
                    alert('未找到视频信息');
                    window.location.href = '/';
                    return;
                }

                // 解析视频信息
                const video = JSON.parse(videoJson);
                
                // 更新界面
                document.title = `${video.videoname} - ${document.getElementById('mainTitle').textContent}`;
                document.getElementById('videoTitle').textContent = video.videoname;
                document.getElementById('videoDesc').textContent = video.videodesc || '暂无简介';
                document.getElementById('platformTag').textContent = video.videoplatform;
                document.getElementById('platformTag').className = `platform-tag platform-${getPlatformClass(video.videoplatform)}`;
                document.getElementById('createTime').textContent = formatDate(video.createtime);
                
                // 设置视频播放器
                const serverConfig = getServerConfig();
                if (!serverConfig) return;
                
                // 设置视频地址
                const videoUrl = video.videounrealaddr.startsWith('http') 
                    ? video.videounrealaddr 
                    : `${serverConfig.url}${video.videounrealaddr}`;
                    
                // 添加 token
                const urlObj = new URL(videoUrl);
                urlObj.searchParams.set('apptoken', serverConfig.token);
                
                // 检测视频比例并设置容器样式
                const videoContainer = document.querySelector('.video-container');
                const ratioType = await checkVideoRatio(urlObj.toString());
                videoContainer.classList.add(ratioType);
                videoContainer.classList.remove(ratioType === 'portrait' ? 'landscape' : 'portrait');
                
                document.getElementById('videoFrame').src = urlObj.toString();
                
                // 保存到播放历史
                saveToHistory(video);
                
                // 保存视频信息到全局变量
                window.currentVideo = video;
                
                // 清除播放信息,防止刷新页面时重复添加历史记录
                localStorage.removeItem('playVideo');
            } catch (error) {
                console.error('加载视频失败:', error);
                alert('加载视频失败，请返回重试');
                window.location.href = '/';
            }
        }

        // 保存到播放历史
        function saveToHistory(video) {
            const history = JSON.parse(localStorage.getItem('playHistory') || '[]');
            const exists = history.findIndex(h => h.id === video.id);
            
            const historyItem = {
                ...video,
                lastPlayed: Date.now()
            };

            if (exists !== -1) {
                history.splice(exists, 1);
            }
            
            history.unshift(historyItem);
            
            // 限制历史记录数量
            if (history.length > 100) {
                history.pop();
            }
            
            localStorage.setItem('playHistory', JSON.stringify(history));
        }

        // 获取服务器配置
        function getServerConfig() {
            const servers = JSON.parse(localStorage.getItem('servers') || '[]');
            const currentServerId = localStorage.getItem('currentServerId');
            
            if (!currentServerId || !servers[currentServerId]) {
                alert('请先选择服务器');
                window.location.href = '/';
                return null;
            }
            
            return servers[currentServerId];
        }

        // 获取平台标签样式
        function getPlatformClass(platform) {
            const platformMap = {
                '哔哩': 'bilibili',
                '抖音': 'douyin',
                'youtube': 'youtube'
            };
            return platformMap[platform] || '';
        }

        // 格式化日期
        function formatDate(dateString) {
            const date = new Date(dateString);
            return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;
        }

        // 分享视频
        async function shareVideo() {
            try {
                const video = window.currentVideo;
                if (!video) {
                    alert('未找到视频信息');
                    return;
                }

                const response = await axios.post('/api/encrypt', {
                    videoData: JSON.stringify(video)
                });

                if (response.data.resCode === '000001') {
                    const shareUrl = `${window.location.origin}/play?token=${response.data.data.token}`;
                    await navigator.clipboard.writeText(shareUrl);
                    alert('分享链接已复制到剪贴板');
                } else {
                    throw new Error(response.data.message);
                }
            } catch (error) {
                console.error('分享失败:', error);
                alert('分享失败: ' + error.message);
            }
        }
    </script>
</body>
</html> 
